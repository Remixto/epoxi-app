package io.epoxi.app.repository.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.googlecode.objectify.annotation.Entity;
import com.googlecode.objectify.annotation.Id;
import com.googlecode.objectify.annotation.Index;
import io.epoxi.app.repository.modelbase.EngineMember;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.NonNull;
import lombok.Setter;

import java.util.Optional;


/**
  * a field defines a column in a source or target as well as an path for how it will be represented in a view.
 **/
@Entity
@ApiModel(description="a field defines a source or target field as well as an path for how it will be represented in a view.")
public class Field  {

  private Field()
  {}

  private Field (String name)
  {
    this(name, null);
  }

  /**
   *
   * @param name  The name of the field when it is returned within a stream.  Name is required. Where name and path are different, name will be used like an column alias.
   * @param path  The path of the column in the source or target.  Path is optional. When not specified, it is assumed to be the same as the name.
   */
  private Field (String name, String path)
  {
    this.name = Optional.ofNullable(name).orElseThrow();
    this.path = path;
  }

  @ApiModelProperty(value = "the internal Id of the field.  This is autogenerated.")
  @Getter(onMethod=@__({@JsonProperty("id")}))
  @Setter
 /*
   * the internal Id of the field.  This is autogenerated.
  */
  @Id private Long id = null;

  @ApiModelProperty(value = "The name of the field when it is returned within a stream.  Name is required. Where name and path are different, name will be used like an column alias.")
  @NonNull
  @Getter(onMethod=@__({@JsonProperty("name")}))
  @Setter
  /*
   * The name of the field to be presented in the schema.  Name is required. Where name and path are different, name will be used like an column alias.
  */
  @Index private String name = null;

  @ApiModelProperty(value = "the name of the field. Typically this is the name of a field in a source or target. Path is optional. When not specified, it is assumed to be the same as the name.")
  @Getter(onMethod=@__({@JsonProperty("path")}))
  @Setter
  /*
   * the name of the field. Typically this is the name of a field in a source or target. Path is optional. When not specified, it is assumed to be the same as the name.
  */
  private String path = null;


  @Override
  public String toString() {
      return EngineMember.toString(this);
  }

  public static Field of(String name)
  {
    return new Field(name);
  }

  public static Field of(String name, String path)
  {
    return new Field(name, path);
  }

}
